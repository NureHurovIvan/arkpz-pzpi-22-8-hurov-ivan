Міністерство освіти і науки України
Харківський національний університет радіоелектроніки





Звіт 
до практичного заняття №1 з дисципліни 
«Аналіз та рефакторинг коду» 
На тему: «Правила оформлення програмного коду»






Виконав:	Перевірив:
Ст. гр. ПЗПІ-22-8 	ст. викладач кафедри ПІ
Гуров І. Г.	Сокорчук Ігор Петрович








Харків 2024
1. Мета роботи
Ознайомитися з основними рекомендаціями щодо написання чистого, ефективного та підтримуваного коду на мові програмування PHP. Навчитися аналізувати та рефакторити код для покращення його якості.

2. Завдання
1)	Дослідити основні рекомендації для написання якісного коду на PHP.
2)	Продемонструвати ці рекомендації на прикладах коду.
3)	Обґрунтувати кожну рекомендацію та надати детальні пояснення.
4)	Підготувати презентацію на основі досліджень.

3. Хід роботи 
Було обрано мову програмування PHP. У презентації (Додаток Б) наведено 
основні рекомендації щодо оформлення програмного коду з описами, а також 
приклад коду до і після застосування цих рекомендацій.
 
Висновки
Дотримання основних рекомендацій написання коду на PHP сприяє створенню чистого, підтримуваного та ефективного коду. Основними перевагами є підвищення читабельності коду, спрощення процесу тестування та рефакторингу, а також забезпечення довготривалої підтримки проєктів.
Відео-презентація:
 
ДОДАТОК А
Програмний код, використаний як приклад у презентації.

// Код до застосування рекомендацій
// До рефакторингу
class Car {
    // Назва автомобіля
    String $name;

    // Чи є у автомобіля колеса?
    bool $hasWheels = false;

    // Чи є у автомобіля двигун?
    bool $hasEngine = false;

    // Чи є у автомобіля кузов?
    bool $hasBody = false;

    function __construct($name) {
        // Призначаємо назву
        $this->name = $name;
    }
}

function assembleCar($car) {
    echo "Starting assembly of $car->name";
    $car->hasBody = true;
    echo "Body is attached.";
    $car->hasEngine = true;
    echo "Engine is installed.";
    $car->hasWheels = true;
    echo "Wheels are installed.";
    echo "$car->name is assembled.";
}

// Після рефакторингу
class Car {
    String $name;
    bool $hasWheels = false;
    bool $hasEngine = false;
    bool $hasBody = false;

    function __construct($name) {
        $this->name = $name; // Встановлюємо ім'я автомобіля
    }

    // Починаємо процес збирання автомобіля
    function assemble() {
        echo "Starting assembly of $this->name";
        $this->addBody();  // Додаємо кузов
        $this->attachEngine();  // Встановлюємо двигун
        $this->installWheels();  // Встановлюємо колеса
        echo "$this->name is assembled";  // Повідомляємо про завершення
    }

    function addBody() {
        $this->hasBody = true;
        echo "Body is attached";
    }

    function attachEngine() {
        $this->hasEngine = true;
        echo "Engine is installed";
    }

    function installWheels() {
        $this->hasWheels = true;
        echo "Wheels are installed";
    }
}

$car = new Car("NiceCar");
$car->assemble(); 
ДОДАТОК Б
Презентація на тему «Правила оформлення програмного коду».
Посилання на відео: https://youtu.be/Q-tKP7hww_U
